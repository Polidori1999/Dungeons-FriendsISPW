<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">


  <modelVersion>4.0.0</modelVersion>
  <groupId>it.uniroma2.marchidori</groupId>
  <artifactId>Maininterface</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Maininterface</name>

  <properties>
    <!-- Parametri Sonar (solo se ti occorre invocare "mvn sonar:sonar" in locale) -->
    <sonar.organization>polidori1999</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>

    <!-- Java 21 -->
    <java.version>21</java.version>

    <!-- Versione JavaFX: su Maven Central esiste la 21.0.0.0 -->
    <javafx.version>21.0.0.0</javafx.version>

    <!-- Rilevamento OS (es: windows-x86_64, linux-aarch64, ecc.) -->
    <javafx.platform>${os.detected.name}-${os.detected.arch}</javafx.platform>

    <!-- (Facoltativo) JUnit 5, se fai test -->
    <junit.version>5.10.2</junit.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <!-- Import BOM di JavaFX -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-bom</artifactId>
        <version>${javafx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- JavaFX Controls + FXML con classifier dinamico (windows, linux, mac, ecc.) -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>${javafx.platform}</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>${javafx.platform}</classifier>
    </dependency>
    <!-- ...aggiungi se servono javafx-graphics, javafx-media, javafx-web... -->

    <!-- JUnit 5 (opzionale) -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compilatore per Java 21 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- Plugin che rileva l'OS (necessario per i classifier JavaFX) -->
      <plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
        <executions>
          <execution>
            <goals>
              <goal>detect</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- (Facoltativo) JavaFX Maven plugin per eseguire o creare immagini . -->
      <!--
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.14</version>
        <executions>
          <execution>
            <id>default-cli</id>
            <configuration>
              <mainClass>it.uniroma2.marchidori.maininterface.Main</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
    </plugins>
  </build>

</project>
